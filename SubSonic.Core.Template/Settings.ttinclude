<#@ assembly name="SubSonic.Core.DataAccessLayer" #>
<#@ assembly name="SubSonic.Core.Abstractions" #>
<#@ parameter type="System.String" name="$connectionKey$" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.Common" #>
<#@ import namespace="SubSonic" #>
<#@ import namespace="SubSonic.Core" #>
<#+
public class Settings
{
	public static ITextTemplatingEngineHost Host { get; set; }

	public string[] ExcludeTables
	{
		get
		{ 
			return new string[]{
				"sysdiagrams",
				"BuildVersion",
				"aspnet_Applications",
				"aspnet_Membership",
				"aspnet_Paths",
				"aspnet_PersonalizationAllUsers",
				"aspnet_PersonalizationPerUser",
				"aspnet_Profile",
				"aspnet_Roles",
				"aspnet_SchemaVersions",
				"aspnet_Users",
				"aspnet_UsersInRoles",
				"aspnet_WebEvent_Events"
				};
		}
	}

	public static string Connection
	{
		get
		{
			if (!string.IsNullOrEmpty($connectionKey$))
			{
				return $connectionKey$;
			}

			throw new InvalidOperationException("Connection string was not injected.");
		}
	}

	public static TService GetService<TService>()
	{
		if(((IServiceProvider)Host).GetService(typeof(TService)) is TService success)
		{
			return success;
		}
		return default;
	}
}
#>